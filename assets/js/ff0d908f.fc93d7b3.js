"use strict";(self.webpackChunkdemonkiller_portfolio=self.webpackChunkdemonkiller_portfolio||[]).push([[2174],{6855:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"projects/arch-linux-gui/build-installer","title":"Building the installer","description":"The installer used in ALG is calamares. Calamares is a distribution independent operating system installer framework. It\'s written in C++/Qt. This document will show you how to setup calamares. Calamares has a comprehensive guide on it\'s wiki.","source":"@site/docs/projects/arch-linux-gui/installer.md","sourceDirName":"projects/arch-linux-gui","slug":"/projects/arch-linux-gui/build-installer","permalink":"/docs/projects/arch-linux-gui/build-installer","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Gaurang","lastUpdatedAt":1739718315000,"frontMatter":{"title":"Building the installer","id":"build-installer","sidebar_label":"Build Installer"},"sidebar":"docs","previous":{"title":"Build ALG ISO","permalink":"/docs/projects/arch-linux-gui/build-alg-iso"},"next":{"title":"Installer Config","permalink":"/docs/projects/arch-linux-gui/installer-config"}}');var i=n(4848),l=n(8453);const r={title:"Building the installer",id:"build-installer",sidebar_label:"Build Installer"},t=void 0,c={},o=[{value:"Building Calamares",id:"building-calamares",level:2},{value:"Packaging calamares for ALG",id:"packaging-calamares-for-alg",level:2},{value:"Get the PKGBUILD file",id:"get-the-pkgbuild-file",level:3},{value:"Making the calamares package",id:"making-the-calamares-package",level:3},{value:"You can skip installing required packages manually and directly install them while building",id:"you-can-skip-installing-required-packages-manually-and-directly-install-them-while-building",level:4},{value:"Make compilation faster",id:"make-compilation-faster",level:3},{value:"Undertand the yield",id:"undertand-the-yield",level:3}];function d(e){const a={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.p,{children:["The installer used in ALG is calamares. Calamares is a distribution independent operating system installer framework. It's written in C++/Qt. This document will show you how to setup calamares. Calamares has a comprehensive guide on it's ",(0,i.jsx)("a",{href:"https://github.com/calamares/calamares/wiki",children:"wiki"}),"."]}),"\n",(0,i.jsx)(a.h2,{id:"building-calamares",children:"Building Calamares"}),"\n",(0,i.jsx)(a.p,{children:"Calamares needs to be compiled(built). Calamares can be built in the following steps. More details can be found on the calamares wiki, linked above."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"$ git clone https://github.com/calamares/calamares.git\n$ mkdir calamares/build\n$ cd calamares/build\n$ cmake -DCMAKE_BUILD_TYPE=Debug ..\n$ make\n"})}),"\n",(0,i.jsx)(a.p,{children:"Calamares can then be run either of the following ways"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"$ ./calamares -d\n$ sudo ./calamares -d\n$ pkexec ./calamares -d\n"})}),"\n",(0,i.jsx)(a.h2,{id:"packaging-calamares-for-alg",children:"Packaging calamares for ALG"}),"\n",(0,i.jsxs)(a.p,{children:["In order to be used by the ",(0,i.jsx)("a",{href:"https://wiki.archlinux.org/title/Arch_Build_System",children:"Arch Build System"}),", calamares needs to be packaged. A package is a precompiled binary, that can be put on a repository and downloaded when building the ISO."]}),"\n",(0,i.jsx)(a.h3,{id:"get-the-pkgbuild-file",children:"Get the PKGBUILD file"}),"\n",(0,i.jsxs)(a.p,{children:["The PKGBUILD file used for calamares in ALG is shown below. Copy & save it in a file named ",(0,i.jsx)("code",{children:"PKGBUILD"}),"."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"#calamares PKGBUILD for Arch Linux GUI\n\npkgname=calamares\npkgver=3.2.61\npkgrel=1\npkgdesc='Distribution-independent installer framework'\narch=('x86_64')\nlicense=(GPL)\nurl=\"https://github.com/calamares/calamares/releases/download\"\nlicense=('LGPL')\ndepends=('kconfig' 'kcoreaddons' 'kiconthemes' 'ki18n' 'kio' 'solid' 'yaml-cpp' 'kpmcore' 'mkinitcpio-openswap'\n         'boost-libs' 'ckbcomp' 'hwinfo' 'qt5-svg' 'polkit-qt5' 'gtk-update-icon-cache' 'plasma-framework'\n         'qt5-xmlpatterns' 'squashfs-tools' 'libpwquality' 'boost') # 'pythonqt>=3.2')\nmakedepends=('extra-cmake-modules' 'qt5-tools' 'qt5-translations' 'git' 'boost')\nbackup=('usr/share/calamares/modules/bootloader.conf'\n        'usr/share/calamares/modules/displaymanager.conf'\n        'usr/share/calamares/modules/initcpio.conf'\n        'usr/share/calamares/modules/unpackfs.conf')\n\nsource=(\"$pkgname-$pkgver-$pkgrel.tar.gz::$url/v$pkgver/calamares-$pkgver.tar.gz\")\nsha256sums=('9ec6c49f4e2316cd3058d402c2ab65efff02e3f09a0028d50f0359e5154e6c8c')\n\nprepare() {\n\tcd ${srcdir}/calamares-${pkgver}\n\tsed -i -e 's/\"Install configuration files\" OFF/\"Install configuration files\" ON/' CMakeLists.txt\n\tsed -i -e 's/# DEBUG_FILESYSTEMS/DEBUG_FILESYSTEMS/' \"$srcdir/${pkgname}-${pkgver}/CMakeLists.txt\"\n\n\t# modify desktop file\n\tsed -i -e 's#Exec=sh.*#Exec=sh -c \"/etc/calamares/launch.sh\"#g' \"$srcdir/${pkgname}-${pkgver}/calamares.desktop\"\n\tsed -i -e 's#Name=.*#Name=Install Arch Linux#g' \"$srcdir/${pkgname}-${pkgver}/calamares.desktop\"\n\tsed -i -e 's#GenericName=.*#GenericName=Arch Linux Installer#g' \"$srcdir/${pkgname}-${pkgver}/calamares.desktop\"\n\tsed -i -e 's#Icon=.*#Icon=archlinux-logo#g' \"$srcdir/${pkgname}-${pkgver}/calamares.desktop\"\n\tsed -i -e 's#Comment=.*#Comment=Arch Linux Installer#g' \"$srcdir/${pkgname}-${pkgver}/calamares.desktop\"\n\n\n\t# patches here\n\n\t# change version\n\t_ver=\"$(cat CMakeLists.txt | grep -m3 -e \"  VERSION\" | grep -o \"[[:digit:]]*\" | xargs | sed s'/ /./g')\"\n\tprintf 'Version: %s-%s' \"${_ver}\" \"${pkgrel}\"\n\tsed -i -e \"s|\\${CALAMARES_VERSION_MAJOR}.\\${CALAMARES_VERSION_MINOR}.\\${CALAMARES_VERSION_PATCH}|${_ver}-${pkgrel}|g\" CMakeLists.txt\n\tsed -i -e \"s|CALAMARES_VERSION_RC 1|CALAMARES_VERSION_RC 0|g\" CMakeLists.txt\n\n}\n\nbuild() {\n\tcd ${srcdir}/calamares-${pkgver}\n\n\tmkdir -p build\n\tcd build\n        cmake .. \\\n              -DCMAKE_BUILD_TYPE=Release \\\n              -DCMAKE_INSTALL_PREFIX=/usr \\\n              -DCMAKE_INSTALL_LIBDIR=lib \\\n              -DWITH_PYTHONQT:BOOL=ON \\\n              -DBoost_NO_BOOST_CMAKE=ON \\\n              -DSKIP_MODULES=\"tracking webview interactiveterminal initramfs \\\n                              initramfscfg dracut dracutlukscfg \\\n                              dummyprocess dummypython dummycpp \\\n                              dummypythonqt services-openrc\"\n        make\n}\n\npackage() {\n\tcd ${srcdir}/calamares-${pkgver}/build\n\tmake DESTDIR=\"$pkgdir\" install\n\t\n}\n"})}),"\n",(0,i.jsx)(a.h3,{id:"making-the-calamares-package",children:"Making the calamares package"}),"\n",(0,i.jsx)(a.p,{children:"In order to make the calamares package for ALG, install the following packages:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"sudo pacman -Sy yaml-cpp kpmcore hwinfo qt5-xmlpatterns libpwquality qt5-translations extra-cmake-modules squashfs-tools boost\n"})}),"\n",(0,i.jsx)(a.p,{children:"The following packages are in the AUR. You can install them with yay or paru."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"paru -S mkinitcpio-openswap ckbcomp\n"})}),"\n",(0,i.jsx)(a.h4,{id:"you-can-skip-installing-required-packages-manually-and-directly-install-them-while-building",children:"You can skip installing required packages manually and directly install them while building"}),"\n",(0,i.jsx)(a.admonition,{type:"danger",children:(0,i.jsx)(a.p,{children:"AUR packages might not install this way"})}),"\n",(0,i.jsx)(a.admonition,{type:"caution",children:(0,i.jsx)(a.p,{children:"Make sure you run the following command in the directory containing the PKGBUILD."})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"makepkg -sc\n"})}),"\n",(0,i.jsx)(a.h3,{id:"make-compilation-faster",children:"Make compilation faster"}),"\n",(0,i.jsxs)(a.p,{children:["Make compilation faster by using all CPU threads availble on host system. In makepkg.conf allocate all cores like this. Make sure you uncomment ",(0,i.jsx)("code",{children:"MAKEFLAGS"}),"."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",metastring:"title=/etc/makepkg.conf",children:'MAKEFLAGS="-j$(nproc)"\n'})}),"\n",(0,i.jsx)(a.h3,{id:"undertand-the-yield",children:"Undertand the yield"}),"\n",(0,i.jsx)(a.p,{children:"Once compilation is done, makepkg will yield the package itself and some other files. A package should be a tarball in .zstd format. You should see something like:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:"pkgname-pkgver-pkgrel-arch-pkg.tar.zst\ncalamares-3.2.61-1-x86_64.pkg.tar.zst\n"})}),"\n",(0,i.jsxs)(a.p,{children:["The ",(0,i.jsx)("code",{children:"pkg"})," folder contains the uncompressed tarball and ",(0,i.jsx)("code",{children:"src"})," contains the cloned repository. Make sure you cleanup this folder when making a new package. This package can be deployed on any repository."]})]})}function p(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>t});var s=n(6540);const i={},l=s.createContext(i);function r(e){const a=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:a},e.children)}}}]);
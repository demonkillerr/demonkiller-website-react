"use strict";(self.webpackChunkdemonkiller_portfolio=self.webpackChunkdemonkiller_portfolio||[]).push([[4918],{6188:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"code/languages/C/intro","title":"C Programming Language Tutorial","description":"This document covers the overview of this reference material.","source":"@site/docs/code/languages/C/intro.md","sourceDirName":"code/languages/C","slug":"/code/languages/C/intro","permalink":"/docs/code/languages/C/intro","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"demonkiller","lastUpdatedAt":1739664206000,"frontMatter":{"title":"C Programming Language Tutorial","id":"intro","sidebar_label":"Introduction"},"sidebar":"docs","previous":{"title":"C Tutorial","permalink":"/docs/category/c-tutorial"},"next":{"title":"Setup & First Program","permalink":"/docs/code/languages/C/setupandfirstprogram"}}');var s=i(4848),l=i(8453);const o={title:"C Programming Language Tutorial",id:"intro",sidebar_label:"Introduction"},t=void 0,a={},c=[{value:"Why Learn C?",id:"why-learn-c",level:3},{value:"Reference Overview",id:"reference-overview",level:2},{value:"Key Topics Covered:",id:"key-topics-covered",level:3},{value:"Who Is This For?",id:"who-is-this-for",level:3},{value:"What\u2019s Next?",id:"whats-next",level:3}];function d(e){const n={h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This document covers the overview of this reference material."}),"\n",(0,s.jsx)(n.p,{children:"C is one of the most fundamental programming languages, widely used in systems programming, high-performance computing (HPC), and embedded systems. Despite its age, C remains relevant because of its efficiency, portability, and fine-grained control over hardware."}),"\n",(0,s.jsx)(n.h3,{id:"why-learn-c",children:"Why Learn C?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Performance: C provides low-level memory control, making it ideal for high-performance applications."}),"\n",(0,s.jsx)(n.li,{children:"Portability: C code can run on almost any platform with minimal modification."}),"\n",(0,s.jsx)(n.li,{children:"Concurrency & Parallelism: Many HPC applications use MPI (Message Passing Interface), which is implemented in C."}),"\n",(0,s.jsx)(n.li,{children:"Used in OS Development: Most operating systems, including Linux, are written in C."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"reference-overview",children:"Reference Overview"}),"\n",(0,s.jsx)(n.p,{children:"This reference is meant to build a strong foundation in C, focusing on topics relevant for HPC and MPI programming. The course emphasizes:"}),"\n",(0,s.jsx)(n.h3,{id:"key-topics-covered",children:"Key Topics Covered:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Functions and Modular Programming"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Function prototypes, pass by value vs. pass by reference, and function pointers."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Pointers & Memory Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Pointer arithmetic, dynamic memory allocation (malloc, free), and double pointers."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Multi-File Code Structure"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Using header (.h) files, separate compilation, and best practices for modular C programming."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build Systems: Makefile"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automating compilation using make to manage multi-file C projects."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Debugging & Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Tools like gdb and valgrind, and tips to avoid common pitfalls."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Mini Project"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implementing a simple matrix operations program using modular C code."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"who-is-this-for",children:"Who Is This For?"}),"\n",(0,s.jsx)(n.p,{children:"This tutorial is for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Beginners who want to learn C beyond basic syntax."}),"\n",(0,s.jsx)(n.li,{children:"Students and Developers preparing for MPI programming."}),"\n",(0,s.jsx)(n.li,{children:"HPC enthusiasts looking to understand how C is used in high-performance applications."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"whats-next",children:"What\u2019s Next?"}),"\n",(0,s.jsx)(n.p,{children:"This tutorial will be followed by an MPI Programming tutorial, where we\u2019ll dive into:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Basics of MPI (Message Passing Interface)"}),"\n",(0,s.jsx)(n.li,{children:"Writing parallel programs in C using MPI"}),"\n",(0,s.jsx)(n.li,{children:"Real-world examples of distributed computing"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var r=i(6540);const s={},l=r.createContext(s);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);